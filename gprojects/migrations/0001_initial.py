# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-19 19:29
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gentities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Gbaseline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Last modification')),
            ],
        ),
        migrations.CreateModel(
            name='Gcalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.BooleanField(default=True, verbose_name='Lunes es laborable?')),
                ('tuesday', models.BooleanField(default=True, verbose_name='Martes es laborable?')),
                ('wednesday', models.BooleanField(default=True, verbose_name='Mi\xe9rcoles es laborable?')),
                ('thursday', models.BooleanField(default=True, verbose_name='Jueves es laborable?')),
                ('friday', models.BooleanField(default=True, verbose_name='Viernes es laborable?')),
                ('saturday', models.BooleanField(default=False, verbose_name='S\xe1bado es laborable?')),
                ('sunday', models.BooleanField(default=False, verbose_name='Domingo es laborable?')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Gday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, max_length=10, null=True, verbose_name='Fecha se\xf1alada')),
                ('workable', models.BooleanField(default=False, verbose_name='Es laborable?')),
                ('gcalendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gcalendar')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Gproject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name of the project')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Description of the project')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Last modification')),
                ('administrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('gentity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gentities.Gentity')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Gresource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Name of the resource')),
                ('kind', models.CharField(blank=True, choices=[('EQU', 'Equipment'), ('STA', 'Staff')], max_length=10, null=True, verbose_name='Material or human resource')),
                ('outsourced', models.BooleanField(default=False, verbose_name='Is this outsourced')),
                ('fixed_cost', models.FloatField(blank=True, null=True, verbose_name='Fixed cost')),
                ('hourly_rate', models.FloatField(blank=True, null=True, verbose_name='Hourly rate')),
                ('overtime_rate', models.FloatField(blank=True, null=True, verbose_name='Overtime rate')),
                ('children', models.ManyToManyField(blank=True, related_name='_gresource_children_+', to='gprojects.Gresource')),
                ('gcalendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gcalendar')),
                ('guser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Gtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Name')),
                ('optimistic_time', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Optimistic time')),
                ('likely_time', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Likely time')),
                ('pessimistic_time', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Pessimistic time')),
                ('priority', models.IntegerField(blank=True, default=500, null=True, verbose_name='Priority')),
                ('restriction', models.CharField(choices=[('ASAP', 'Lo antes posible'), ('ALAP', 'Lo m\xe1s tarde posible'), ('SD', 'Debe empezar el ...'), ('ED', 'Debe terminar el ...'), ('SNBD', 'No iniciar antes del ...'), ('SNLD', 'Iniciar como muy tarde el ...'), ('ENBD', 'No terminar antes del ...'), ('ENLD', 'Terminar como muy tarde el ...')], max_length=10, verbose_name='Restriction type')),
                ('restriction_date', models.DateTimeField(blank=True, null=True, verbose_name='Restriction date')),
                ('dependencies', models.CharField(choices=[('FS', 'Finish to Start'), ('FF', 'Finish to Finish'), ('SS', 'Start to Start'), ('SF', 'Start to Finish')], max_length=10, verbose_name='Type of dependency')),
                ('percentage_complete', models.IntegerField(blank=True, null=True, verbose_name='Percentage complete')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes about the task')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Last modification')),
                ('children', models.ManyToManyField(blank=True, related_name='_gtask_children_+', to='gprojects.Gtask')),
                ('gbaseline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gbaseline')),
                ('gresources', models.ManyToManyField(blank=True, to='gprojects.Gresource')),
                ('predecessors', models.ManyToManyField(blank=True, related_name='_gtask_predecessors_+', to='gprojects.Gtask')),
                ('successors', models.ManyToManyField(blank=True, related_name='_gtask_successors_+', to='gprojects.Gtask')),
            ],
        ),
        migrations.CreateModel(
            name='Gtime_slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.DateTimeField(blank=True, max_length=10, null=True, verbose_name='Hora de comienzo')),
                ('to_time', models.DateTimeField(blank=True, max_length=10, null=True, verbose_name='Hora de finalizaci\xf3n')),
                ('gcalendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gcalendar')),
                ('gday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gday')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='gcalendar',
            name='gproject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gproject'),
        ),
        migrations.AddField(
            model_name='gbaseline',
            name='gproject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gprojects.Gproject'),
        ),
    ]
