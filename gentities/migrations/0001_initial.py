# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-19 15:36
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gentities.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_auto_20160319_1533'),
    ]

    operations = [
        migrations.CreateModel(
            name='Guser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='contrase\xf1a')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='\xfaltimo inicio de sesi\xf3n')),
                ('is_superuser', models.BooleanField(default=False, help_text='Indica que este usuario tiene todos los permisos sin asign\xe1rselos expl\xedcitamente.', verbose_name='es superusuario')),
                ('username', models.CharField(error_messages={'unique': 'Ya existe un usuario con este nombre.'}, help_text='Requerido. 30 caracteres o menos. Letras, d\xedgitos y @/./+/-/_ solamente.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Introduzca un nombre de usuario v\xe1lido. Este valor s\xf3lo puede contener letras, n\xfameros y los caracteres @/./+/-/_.')], verbose_name='nombre de usuario')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='nombre')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='apellidos')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='direcci\xf3n de correo electr\xf3nico')),
                ('is_staff', models.BooleanField(default=False, help_text='Indica si el usuario puede entrar en este sitio de administraci\xf3n.', verbose_name='es staff')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el usuario debe ser tratado como activo. Desmarque esta opci\xf3n en lugar de borrar la cuenta.', verbose_name='activo')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='fecha de alta')),
                ('sex', models.CharField(blank=True, choices=[('H', 'Hombre'), ('M', 'Mujer')], max_length=10, verbose_name='Sexo')),
                ('idcard', models.CharField(blank=True, max_length=20, null=True, verbose_name='DNI')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Direcci\xf3n')),
                ('postalcode', models.CharField(blank=True, max_length=10, verbose_name='C\xf3digo postal')),
                ('locality', models.CharField(blank=True, max_length=50, verbose_name='Localidad de residencia')),
                ('province', models.CharField(blank=True, max_length=50, verbose_name='Provincia')),
                ('born', models.CharField(blank=True, max_length=20, verbose_name='Fecha de nacimiento')),
                ('tel1', models.CharField(blank=True, max_length=30, verbose_name='Tel\xe9fono fijo')),
                ('tel2', models.CharField(blank=True, max_length=30, verbose_name='Tel\xe9fono m\xf3vil')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo que ocupa en la entidad')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Resumen datos')),
                ('photo', models.ImageField(blank=True, upload_to=gentities.models.update_photo, verbose_name='Fotograf\xeda')),
            ],
            options={
                'ordering': ['gentity', 'last_name'],
                'verbose_name_plural': 'Usuarios (Guser)',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Gdepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nombre')),
                ('messages', models.BooleanField(default=False, verbose_name='Est\xe1n en lista de mensajer\xeda')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name_plural': 'Departamentos',
            },
        ),
        migrations.CreateModel(
            name='Gentity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nombre')),
                ('vat_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='NIF')),
                ('iban', models.CharField(blank=True, max_length=40, null=True, verbose_name='IBAN')),
                ('address', models.CharField(blank=True, max_length=375, null=True, verbose_name='Direcci\xf3n')),
                ('locality', models.CharField(blank=True, max_length=200, null=True, verbose_name='Localidad')),
                ('province', models.CharField(choices=[('0', '')], default='0', max_length=4, verbose_name='Provincia')),
                ('postalcode', models.CharField(blank=True, max_length=20, null=True, verbose_name='C\xf3digo postal')),
                ('tel', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tel\xe9fono')),
                ('fax', models.CharField(blank=True, max_length=20, null=True, verbose_name='Fax')),
                ('web', models.URLField(blank=True, max_length=100, null=True, verbose_name='Web')),
                ('mail', models.EmailField(blank=True, max_length=100, null=True, verbose_name='E-mail')),
                ('anagram', models.ImageField(blank=True, upload_to=gentities.models.update_anagram_gentity, verbose_name='Anagrama')),
                ('domain', models.CharField(blank=True, max_length=200, null=True, verbose_name='Subdominio')),
            ],
            options={
                'verbose_name_plural': 'Entidades',
            },
        ),
        migrations.CreateModel(
            name='Glink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=40, verbose_name='C\xf3digo')),
                ('link', models.CharField(max_length=100, verbose_name='Enlace')),
                ('deadline', models.DateField(verbose_name='Fecha l\xedmite de validez')),
                ('guser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Gpermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del permiso')),
                ('code_name', models.CharField(max_length=50, verbose_name='C\xf3digo del permiso')),
                ('type', models.CharField(choices=[('MEN', 'Permiso para acceder a un men\xfa'), ('SUB', 'Permiso para acceder a un  submen\xfa'), ('MTE', 'Permiso para acceder a un elemento de un men\xfa'), ('STE', 'Permiso para acceder a un elemento de un submen\xfa'), ('ESP', 'Permiso especial para determinadas acciones')], max_length=10, verbose_name='tipo')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Gprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('level', models.IntegerField(blank=True, choices=[(1, 'Cargo/Perfil de primer nivel'), (2, 'Cargo/Perfil de segundo nivel'), (3, 'Cargo/Perfil de tercer nivel'), (4, 'Cargo/Perfil de cuarto nivel'), (5, 'Cargo/Perfil de quinto nivel'), (6, 'Cargo/Perfil de sexto nivel')], default=1, null=True, verbose_name='Nivel jer\xe1rquico en el organigrama')),
                ('gentity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gentities.Gentity')),
                ('gpermissions', models.ManyToManyField(blank=True, to='gentities.Gpermission')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gentities.Gprofile')),
            ],
            options={
                'ordering': ['pk'],
                'verbose_name_plural': 'Perfiles',
            },
        ),
        migrations.AddField(
            model_name='gdepartment',
            name='gentity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gentities.Gentity'),
        ),
        migrations.AddField(
            model_name='guser',
            name='gdepartment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gentities.Gdepartment'),
        ),
        migrations.AddField(
            model_name='guser',
            name='gentity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gentities.Gentity'),
        ),
        migrations.AddField(
            model_name='guser',
            name='gpermissions',
            field=models.ManyToManyField(blank=True, to='gentities.Gpermission'),
        ),
        migrations.AddField(
            model_name='guser',
            name='gprofiles',
            field=models.ManyToManyField(blank=True, to='gentities.Gprofile'),
        ),
        migrations.AddField(
            model_name='guser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario. Un usuario tendr\xe1 todos los permisos asignados a cada uno de sus grupos.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='grupos'),
        ),
        migrations.AddField(
            model_name='guser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Permisos espec\xedficos para este usuario.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='permisos de usuario'),
        ),
    ]
